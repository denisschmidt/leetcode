/*
Recursion solution.

В этом способе предполагается, что мы начинаем перебирать последовательности с пустого списка.
После того, как в список добавлена скобка (открывающая или закрывающая),
снова выполняется вызов рекурсии и проверка условий.

Какие могут быть условия?

Необходимо следить за разницей между открывающими и закрывающими скобками (переменная cnt)

Нельзя добавить закрывающую скобку в список, если эта разница не является положительной,
  иначе скобочная последовательность перестанет быть правильной.

Осталось аккуратно реализовать это в коде.

 */

/**
 * @param {string} count - разница между скобками
 * @param {string} index - индекс, по которому кладем скобку в список
 * @param {string} k - количество скобок
 * @param {string} list - пустой список, куда кладем скобки

 * @return {boolean}
 */

const generateBracers = (count = 0, index = 0, k = 6, list = []) => {
  if (k % 2 !== 0) {
    return [];
  }
  // кладем откр. скобку, только если хватает места
  if (count <= k - index - 2) {
    list[index] = '(';
    generateBracers(count + 1, index + 1, k, list);
  }
  // закр. скобку можно положить всегда, если cnt > 0
  if (count > 0) {
    list[index] = ')';
    generateBracers(count - 1, index + 1, k, list);
  }

  if (index === k && count === 0) {
    console.log('---', list);
    return list;
  }
};

generateBracers(0, 0, 6, []);
